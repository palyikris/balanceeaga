name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  compose-up-smoketest:
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: docker/docker-compose.yml
      PROJECT: ci_${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: CI override (ephemeral ports + vite host)
        run: |
          mkdir -p docker
          cat > docker/ci.override.yml <<'YAML'
          services:
            frontend:
              ports:
                - "0:5173"
              environment:
                VITE_HOST: 0.0.0.0
                HOST: 0.0.0.0
            backend:
              ports:
                - "0:8000"
          YAML

      - name: Compose up (dev)
        run: |
          docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml up -d --build
          docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml ps

      - name: Resolve container ids and ports
        id: meta
        run: |
          FE_ID=$(docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml ps -q frontend)
          BE_ID=$(docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml ps -q backend)
          FE_PORT=$(docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml port frontend 5173 | sed 's/.*:\([0-9]\+\)$/\1/')
          BE_PORT=$(docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml port backend 8000 | sed 's/.*:\([0-9]\+\)$/\1/')
          echo "fe_id=$FE_ID" >> $GITHUB_OUTPUT
          echo "be_id=$BE_ID" >> $GITHUB_OUTPUT
          echo "fe_port=$FE_PORT" >> $GITHUB_OUTPUT
          echo "be_port=$BE_PORT" >> $GITHUB_OUTPUT
          echo "Frontend on :$FE_PORT; Backend on :$BE_PORT"

      - name: Wait for healthchecks or TCP (frontend+backend)
        run: |
          set -e
          wait_container () {
            ID="$1"
            PORT="$2"
            # Ha van healthcheck, arra várunk:
            if docker inspect "$ID" --format '{{json .State.Health}}' | grep -q '"Status":'; then
              echo "Waiting for HEALTHY ($ID)..."
              for i in $(seq 1 60); do
                STATUS=$(docker inspect "$ID" --format '{{.State.Health.Status}}')
                [ "$STATUS" = "healthy" ] && echo "Healthy." && return 0
                sleep 2
              done
              echo "Container not healthy in time: $ID"
              return 1
            else
              # Egyébként TCP-re várunk
              echo "Waiting TCP on :$PORT ..."
              for i in $(seq 1 60); do
                (echo > /dev/tcp/127.0.0.1/$PORT) >/dev/null 2>&1 && echo "TCP open." && return 0
                sleep 2
              done
              echo "TCP not open in time on :$PORT"
              return 1
            fi
          }
          wait_container "${{ steps.meta.outputs.fe_id }}" "${{ steps.meta.outputs.fe_port }}"
          wait_container "${{ steps.meta.outputs.be_id }}" "${{ steps.meta.outputs.be_port }}"

      - name: HTTP smoke (toleráns)
        run: |
          set -e
          FRONT=${{ steps.meta.outputs.fe_port }}
          BACK=${{ steps.meta.outputs.be_port }}

          echo "Try frontend GET / (no -f, 404 is OK)"
          curl -sS -o /dev/null "http://127.0.0.1:${FRONT}" || true

          echo "Try backend GET /docs, then /openapi.json, then /health (no -f)"
          (curl -sS -o /dev/null "http://127.0.0.1:${BACK}/docs" \
          || curl -sS -o /dev/null "http://127.0.0.1:${BACK}/openapi.json" \
          || curl -sS -o /dev/null "http://127.0.0.1:${BACK}/health") || {
            echo "Backend not answering any known endpoint"; exit 1; }

      - name: Logs if failed
        if: failure()
        run: |
          docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml logs --no-color

      - name: Tear down
        if: always()
        run: |
          docker compose -p "$PROJECT" -f "$COMPOSE_FILE" -f docker/ci.override.yml down -v
